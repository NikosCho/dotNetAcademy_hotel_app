@model dotNetAcademy.ViewModels.RoomViewModel

@{
    ViewData["Title"] = Model.Room.Name;
}


@section Css {
    <link href="@Url.Content("~/css/hotels/room.css")" rel="stylesheet" />
}

@section Scripts {
    <script>
        var room_lat = @Model.Room.LatLocation;
        var room_lng = @Model.Room.LngLocation;
    </script>
    <script src="@Url.Content("~/js/hotels/room.js")"></script>
    <script async defer type="text/javascript" src="https://maps.google.com/maps/api/js?v=3.exp&key=AIzaSyAP1CBF-e5lFiBHvj-xya_5W9reCj8O6mQ&callback=initMap"></script>
}

<div class="room-header">
    <span class="room-title">@(Model.Room.Name)</span>
    <span class="room-location">@(Model.Room.Location), @(Model.Room.Area), @(Model.Room.City)</span>
    @*<span class="room-rate">@Model.Room.Reviews.Select(x => x.Rate).DefaultIfEmpty(0).Average().ToString("0.0")</span>*@
    <span class="room-pricing"><span class="card-amount">@(Model.Room.Price) &euro;</span> / per night</span>
</div>
<div class="room-image">
    <img src="~/img/@(Model.Room.Photo)" alt="Flowers in Chania">
</div>

<div class="room-inpage-title">Features</div>

<div class="room-features">
    @*<div class="room-feature">
        <i class="fas fa-money-bill"></i>
        <span> @(Model.Room.Price) &euro; / per night</span>
    </div>*@
    <div class="room-feature">
        <i class="fas fa-hotel"></i>
        <span> @(Model.Room.RoomType.RoomType1)</span>
    </div>
    <div class="room-feature">
        <i class="fas fa-users"></i>
        <span> @(Model.Room.CountOfGuests) guests</span>
    </div>
    @if (Model.Room.Wifi == 1) {
        <div class="room-feature">
            <i class="fas fa-wifi"></i>
            <span>Has wifi</span>
        </div>
    }
    @if (Model.Room.Parking == 1) {
        <div class="room-feature">
            <i class="fas fa-parking"></i>
            <span> Has parking</span>
        </div>
    }
    @if (Model.Room.PetFriendly == 1) {
        <div class="room-feature">
            <i class="fas fa-paw"></i>
            <span> Pet friendly</span>
        </div>
    }
</div>

<div class="room-inpage-title">Description</div>

<div class="room-text">
    @(Model.Room.LongDescription)
</div>

<div class="room-booking">

@if (Model.ShowBookingButton) {
    if (!Model.IsAvailable) {
        <form method="post" asp-controller="Hotels" asp-action="DeleteBooking" asp-route-id="@Model.Room.RoomId" autocomplete="off">
            <input type="hidden" asp-for="BookingForm.CheckIn" value="@Model.Room.Bookings.ElementAt(0).CheckInDate" />
            <input type="hidden" asp-for="BookingForm.CheckOut" value="@Model.Room.Bookings.ElementAt(0).CheckOutDate" />
            <button class="btn btn-error" type="submit" value="Cancel Booking">
                Cancel Booking:
                @(DateTime.ParseExact(@Model.Room.Bookings.ElementAt(0).CheckInDate, "yyyy-mm-dd", null).Date.ToString("dd MMM yyyy") )
                -
                @(DateTime.ParseExact(@Model.Room.Bookings.ElementAt(0).CheckOutDate, "yyyy-mm-dd", null).Date.ToString("dd MMM yyyy"))
            </button>
        </form>
    }else {
        <form method="post" asp-controller="Hotels" asp-action="Book" asp-route-id="@Model.Room.RoomId" autocomplete="off">
            <input type="hidden" asp-for="BookingForm.CheckIn" />
            <input type="hidden" asp-for="BookingForm.CheckOut" />
            <button class="btn btn-primary" type="submit" value="Book Now">
                Book: @Context.Request.Query["CheckIn"][0] to @Context.Request.Query["CheckOut"][0]
            </button>
        </form>
    }
}
</div>

<div class="room-inpage-title">Location</div>

<div id="map" class="room-map"></div>

<div class="room-inpage-title">
    Reviews <span class="room-rate">- @Model.Room.Reviews.Select(x => x.Rate).DefaultIfEmpty(0).Average().ToString("0.0") <i class="fas fa-star yellow"></i></span>
</div>

<div class="room-add-review">
    <div class="col-left">
        <partial name="_ReviewPartial" model="Model.ReviewForm" />
    </div>
</div>

<div class="room-reviews">
    @foreach (var review in Model.Room.Reviews) {
        <div class="room-review">
            <div class="review-user">
                <i class="fas fa-user"></i>
                <span>Nikos</span>
            </div>
            <div class="review-stars">
                @*@for (var i = 1; i <= review.Rate; i++) {<i class="fas fa-star"></i>}*@
                @for (var i = 1; i <= 5; i++) {
                    @if (i <= review.Rate) {<i class="fas fa-star yellow"></i> }
                    else { <i class="fas fa-star grey"></i>}
                }
            </div>
            <div class="review-text">
                @(review.Text)
            </div>
        </div>
    }
</div>
