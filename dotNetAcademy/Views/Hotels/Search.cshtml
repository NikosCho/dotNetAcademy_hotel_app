@*@model dotNetAcademy.ViewModels.RoomFiltersViewModel*@
@model IEnumerable<Room>

@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_MainLayout.cshtml";

    var cities = ViewData["Cities"] as IEnumerable<string>;
    var roomTypes = ViewData["RoomTypes"] as IEnumerable<RoomType>;
}


@section Css {
    <link href="@Url.Content("~/css/hotels/search.css")" rel="stylesheet" />
}

@section Scripts {
    <script src="@Url.Content("~/js/hotels/search.js")"></script>
    @*<script async defer type="text/javascript" src="https://maps.google.com/maps/api/js?v=3.exp&key=AIzaSyAP1CBF-e5lFiBHvj-xya_5W9reCj8O6mQ&callback=initMap"></script>*@
}

<div class="col-left">

    <form action='@Url.Action("Search", "Hotels", null, null)' onsubmit="return formValidation()" autocomplete="off">
        <div class="search-box form-primary">

            <select id="city"
                    class="inp-primary"
                    name="City"
                    asp-items="@(new SelectList(cities))">
                <option value="" hidden disabled selected>
                    City
                </option>

            </select>

            <select id="roomtype"
                    class="inp-primary"
                    name="RoomTypeId"
                    asp-items="@(new SelectList(roomTypes, "Id", "RoomType1"))">
                <option value="" hidden disabled selected>
                    Room Type
                </option>

            </select>

            <input id="checkin"
                   class='datepicker-here'
                   type='text'
                   name="CheckIn"
                   data-language='en'
                   placeholder="Check In"
                   autocomplete="off" />

            <input id="checkout"
                   class='datepicker-here'
                   type='text'
                   name="CheckOut"
                   data-language='en'
                   placeholder="Check Out"
                   autocomplete="off" />

            <button class="btn btn-primary" type="submit" value="Submit">Search</button>

        </div>
    </form>
</div>

<div class="col-right">
    <div class="cards-container">
        @if (!Model.Any()) {
            <span> No room !</span>
        }
        else {
            @foreach (var room in Model) {
                <a class="card-link" href='@Url.Action("Room", "Hotels", new { id=room.RoomId}, null)'>
                    <div class="hotel-card">
                        <div class="card-image" style="background-image: url(/img/@(room.Photo));"></div>
                        <div class="card-content">
                            <div class="card-row">
                                <div class="card-info">
                                    <div class="card-title">@(room.Name)</div>
                                    <div class="card-location">@(room.Area), @(room.City)</div>
                                </div>
                                <div class="card-rate">6.5<i class="fas fa-star"></i></div>
                            </div>

                            <div class="card-text">
                                @(room.ShortDescription)
                            </div>
                            <div class="card-row">
                                <div class="card-type"><i class="fas fa-home"></i> @(room.RoomType.RoomType1)</div>
                                <div class="card-guests"><i class="fas fa-users"></i> @(room.CountOfGuests)</div>
                                <div class="card-pricing"><span class="card-amount">@(room.Price) &euro;</span> / per night </div>
                            </div>
                        </div>
                    </div>
                </a>
            }
        }
    </div>
</div>
